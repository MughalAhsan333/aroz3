signup.html 


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - Aroz</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <nav>
        <a href="/" class="logo"><i class="fas fa-rocket"></i>Aroz</a>
        <ul>
            <li><a href="/">Home</a></li>
            <li class="how-it-works-container">
                <a class="how-it-works-link">How It Works</a>
                <div class="how-it-works-dropdown">
                    <h4>Start Earning in 3 Simple Steps</h4>
                    <p><strong>1. Sign Up & Browse:</strong> Create your free account and explore available simple tasks.</p>
                    <p><strong>2. Complete Tasks:</strong> Choose a task you like, such as:</p>
                    <ul style="color: #64748b; margin-left: 1.5rem; margin-bottom: 1rem;">
                        <li>Taking quick surveys</li>
                        <li>Watching short videos</li>
                        <li>Testing new apps</li>
                        <li>Simple data entry</li>
                    </ul>
                    <p><strong>3. Get Paid:</strong> Earn money for each completed task. Withdraw your earnings easily to your bank account, PayPal, or other methods.</p>
                </div>
            </li>
            <li class="support-container">
                <a class="support-link">Support</a>
                <div class="dropdown-content">
                    <p>Email us at:</p>
                    <a href="mailto:taskkaropaisakamao@gmail.com">taskkaropaisakamao@gmail.com</a>
                </div>
            </li>
        </ul>
        <a href="login.html" class="nav-cta">Login</a>
    </nav>

    <main>
        <div class="form-container">
            <h1>Create Your Account</h1>
            <!-- Added novalidate to disable browser popup -->
            <form id="signupForm" novalidate>
                <div class="form-group">
                    <label for="firstName">First Name</label>
                    <input type="text" id="firstName" name="firstName" required>
                </div>
                <div class="form-group">
                    <label for="lastName">Last Name</label>
                    <input type="text" id="lastName" name="lastName" required>
                </div>
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" name="email" required>
                    <p class="error-message" id="emailError">This email is already registered.</p>
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" required>
                </div>
                <div class="form-group">
                    <label for="confirmPassword">Confirm Password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" required>
                    <p class="error-message" id="passwordError">Passwords do not match.</p>
                </div>
                <button type="submit" class="form-submit-btn">Sign Up</button>
            </form>
            <div class="form-footer">
                <p>Already have an account? <a href="login.html">Log In</a></p>
            </div>
        </div>
    </main>

    <!-- New Loader and Success Overlay -->
    <div class="loader-overlay" id="loaderOverlay">
        <div class="loader" id="loader"></div>
        <div class="loader-success" id="successCheckmark">
            <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                <circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none"/>
                <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"/>
            </svg>
        </div>
    </div>

<script>
    // Function to validate email format (must contain @)
    function isValidEmail(email) {
        const emailRegex = /.+@.+\..+/; // Basic regex to check for @ and a dot
        return emailRegex.test(email);
    }

    // Handle Form Submission - UPDATED TO USE NETLIFY FUNCTION
    document.getElementById('signupForm').addEventListener('submit', async function(event) {
        event.preventDefault(); // Stop the form from reloading the page

        // Get input elements and their values
        const firstNameInput = document.getElementById('firstName');
        const lastNameInput = document.getElementById('lastName');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');

        const firstName = firstNameInput.value.trim();
        const lastName = lastNameInput.value.trim();
        const email = emailInput.value.trim();
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        // Reset all error states first
        const allInputs = [firstNameInput, lastNameInput, emailInput, passwordInput, confirmPasswordInput];
        allInputs.forEach(input => {
            input.parentElement.classList.remove('error');
        });
        document.getElementById('emailError').style.display = 'none';
        document.getElementById('passwordError').style.display = 'none';

        let isValid = true;

        // --- VALIDATION 1: Check if any field is empty --- //
        if (!firstName) {
            firstNameInput.parentElement.classList.add('error');
            isValid = false;
        }
        if (!lastName) {
            lastNameInput.parentElement.classList.add('error');
            isValid = false;
        }
        if (!email) {
            emailInput.parentElement.classList.add('error');
            isValid = false;
        }
        if (!password) {
            passwordInput.parentElement.classList.add('error');
            isValid = false;
        }
        if (!confirmPassword) {
            confirmPasswordInput.parentElement.classList.add('error');
            isValid = false;
        }

        // If any field is empty, stop here.
        if (!isValid) {
            return;
        }

        // --- VALIDATION 2: Check for more complex errors --- //

        // Check if email is valid (contains @ and .)
        if (!isValidEmail(email)) {
            document.getElementById('emailError').style.display = 'block';
            document.getElementById('emailError').textContent = 'Please enter a valid email address (e.g., user@gmail.com).';
            emailInput.parentElement.classList.add('error');
            isValid = false;
        }

        // Check if password is at least 6 characters
        if (password.length < 6) {
            document.getElementById('passwordError').style.display = 'block';
            document.getElementById('passwordError').textContent = 'Password must be at least 6 characters long.';
            passwordInput.parentElement.classList.add('error');
            isValid = false;
        }
        // Check if passwords match (only if password is long enough)
        else if (password !== confirmPassword) {
            document.getElementById('passwordError').style.display = 'block';
            document.getElementById('passwordError').textContent = 'Passwords do not match.';
            confirmPasswordInput.parentElement.classList.add('error');
            isValid = false;
        }

        // If ANY validation fails, stop here.
        if (!isValid) {
            return;
        }

        // --- VALIDATION PASSED - NOW USE NETLIFY FUNCTION --- //
        // Show the loader overlay and spinning animation
        const overlay = document.getElementById('loaderOverlay');
        const loader = document.getElementById('loader');
        const successCheck = document.getElementById('successCheckmark');

        overlay.style.display = 'flex';
        loader.style.display = 'block';

        try {
            // Send signup data to Netlify Function
            const response = await fetch('/.netlify/functions/signup', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    firstName: firstName,
                    lastName: lastName,
                    email: email,
                    password: password
                })
            });

            const result = await response.json();

            if (result.error) {
                // Handle error from Netlify function
                throw new Error(result.error);
            }

            // Success! Show checkmark and redirect
            loader.style.display = 'none';
            successCheck.style.display = 'block';

            setTimeout(() => {
                window.location.href = 'login.html';
            }, 1500);

        } catch (error) {
            // Hide loader on error
            overlay.style.display = 'none';
            
            // Show error message
            if (error.message.includes('already exists')) {
                document.getElementById('emailError').style.display = 'block';
                document.getElementById('emailError').textContent = 'This email is already registered.';
                emailInput.parentElement.classList.add('error');
            } else {
                alert('Error: ' + error.message);
            }
        }
    });
</script>

</body>
</html>





login.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Aroz</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <nav>
        <a href="/" class="logo"><i class="fas fa-rocket"></i>Aroz</a>
        <ul>
            <li><a href="/">Home</a></li>
            <li class="how-it-works-container">
                <a class="how-it-works-link">How It Works</a>
                <div class="how-it-works-dropdown">
                    <h4>Start Earning in 3 Simple Steps</h4>
                    <p><strong>1. Sign Up & Browse:</strong> Create your free account and explore available simple tasks.</p>
                    <p><strong>2. Complete Tasks:</strong> Choose a task you like, such as:</p>
                    <ul style="color: #64748b; margin-left: 1.5rem; margin-bottom: 1rem;">
                        <li>Taking quick surveys</li>
                        <li>Watching short videos</li>
                        <li>Testing new apps</li>
                        <li>Simple data entry</li>
                    </ul>
                    <p><strong>3. Get Paid:</strong> Earn money for each completed task. Withdraw your earnings easily to your bank account, PayPal, or other methods.</p>
                </div>
            </li>
            <li class="support-container">
                <a class="support-link">Support</a>
                <div class="dropdown-content">
                    <p>Email us at:</p>
                    <a href="mailto:taskkaropaisakamao@gmail.com">taskkaropaisakamao@gmail.com</a>
                </div>
            </li>
        </ul>
        <a href="signup.html" class="nav-cta">Sign Up</a>
    </nav>

    <main>
        <div class="form-container">
            <h1>Welcome Back</h1>
            <form id="loginForm" novalidate>
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" name="email" required>
                    <p class="error-message" id="emailError"></p>
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" required>
                    <p class="error-message" id="passwordError"></p>
                </div>
                <button type="submit" class="form-submit-btn">Log In</button>
            </form>
            <div class="form-footer">
                <p>Don't have an account? <a href="signup.html">Sign Up</a></p>
            </div>
        </div>
    </main>

    <!-- Loader and Success Overlay -->
    <div class="loader-overlay" id="loaderOverlay">
        <div class="loader" id="loader"></div>
        <div class="loader-success" id="successCheckmark">
            <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                <circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none"/>
                <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"/>
            </svg>
        </div>
    </div>

    <script>
    // Handle Form Submission - UPDATED TO USE NETLIFY FUNCTION
    document.getElementById('loginForm').addEventListener('submit', async function(event) {
        event.preventDefault(); // Stop the form from reloading the page

        // Get input elements and their values
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');

        const email = emailInput.value.trim();
        const password = passwordInput.value;

        // Reset all error states first
        const allInputs = [emailInput, passwordInput];
        allInputs.forEach(input => {
            input.parentElement.classList.remove('error');
        });
        document.getElementById('emailError').style.display = 'none';
        document.getElementById('passwordError').style.display = 'none';

        let isValid = true;

        // --- VALIDATION: Check if any field is empty --- //
        if (!email) {
            emailInput.parentElement.classList.add('error');
            isValid = false;
        }
        if (!password) {
            passwordInput.parentElement.classList.add('error');
            isValid = false;
        }

        // If any field is empty, stop here.
        if (!isValid) {
            return;
        }

        // --- VALIDATION PASSED - NOW USE NETLIFY FUNCTION --- //
        // Show the loader overlay and spinning animation
        const overlay = document.getElementById('loaderOverlay');
        const loader = document.getElementById('loader');
        const successCheck = document.getElementById('successCheckmark');

        overlay.style.display = 'flex';
        loader.style.display = 'block';

        try {
            // Send login data to Netlify Function
            const response = await fetch('/.netlify/functions/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    email: email,
                    password: password
                })
            });

            const result = await response.json();

            // Check if login failed
            if (result.error) {
                throw new Error(result.error);
            }

            // Login Success! Show checkmark
            loader.style.display = 'none';
            successCheck.style.display = 'block';

            // Save login status and user data
            localStorage.setItem('isLoggedIn', 'true');
            localStorage.setItem('loggedInUser', JSON.stringify(result.user));

            // Wait for the success animation to play, then redirect to DASHBOARD
            setTimeout(() => {
                window.location.href = 'dashboard.html';
            }, 1500);

        } catch (error) {
            // Hide loader on error
            overlay.style.display = 'none';
            
            // Show error message
            document.getElementById('passwordError').style.display = 'block';
            document.getElementById('passwordError').textContent = 'Invalid email or password. Please try again.';
            passwordInput.parentElement.classList.add('error');
        }
    });
</script>
</body>
</html>


dashboard.html


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - Aroz</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <!-- Top Navigation Bar -->
    <nav class="dashboard-nav">
        <a href="/" class="logo"><i class="fas fa-rocket"></i>Aroz</a>
        
        <div class="nav-right">
            <div class="user-dropdown-container">
                <button class="user-menu-btn" id="userMenuBtn">
                    <img src="https://www.pngkey.com/png/full/72-729716_user-avatar-png-graphic-free-download-icon.png" alt="User" class="user-avatar">
                    <span id="userGreeting">Hi User!</span>
                </button>
                <div class="user-dropdown-content">
                    <div class="user-info">
                        <img src="https://www.pngkey.com/png/full/72-729716_user-avatar-png-graphic-free-download-icon.png" alt="User" class="user-avatar">
                        <div>
                            <p class="user-name" id="dropdownUserName">User Name</p>
                            <p class="user-email" id="dropdownUserEmail">user@example.com</p>
                        </div>
                    </div>
                    <hr>
                    <a href="#personal-info" class="dropdown-link" onclick="showSection('personal-info')">
                        <i class="fas fa-user"></i> Personal Information
                    </a>
                    <a href="#earnings" class="dropdown-link" onclick="showSection('earnings')">
                        <i class="fas fa-money-bill-wave"></i> Earnings
                    </a>
                    <a href="#task-history" class="dropdown-link" onclick="showSection('task-history')">
                        <i class="fas fa-history"></i> Task History
                    </a>
                    <hr>
                    <a href="#" class="dropdown-link" onclick="logout()">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-menu">
                <a href="#overview" class="sidebar-link active" onclick="showSection('overview')">
                    <i class="fas fa-chart-pie"></i> Overview
                </a>
                <a href="#tasks" class="sidebar-link" onclick="showSection('tasks')">
                    <i class="fas fa-tasks"></i> Available Tasks
                </a>
                <a href="#earnings" class="sidebar-link" onclick="showSection('earnings')">
                    <i class="fas fa-wallet"></i> My Earnings
                </a>
                <a href="#referral" class="sidebar-link" onclick="showSection('referral')">
                    <i class="fas fa-users"></i> Refer & Earn
                </a>
                <a href="#settings" class="sidebar-link" onclick="showSection('settings')">
                    <i class="fas fa-cog"></i> Settings
                </a>
            </div>
        </aside>

        <!-- Main Content Area -->
        <main class="dashboard-main">
            <div id="overview" class="content-section active">
                <h2>Welcome, <span id="overviewUserName">User</span>!</h2>
                <p class="welcome-text">Start completing tasks to earn money. Your dashboard is currently empty because you haven't completed any tasks yet.</p>
                <div class="stats-grid">
                    <div class="stat-card">
                        <i class="fas fa-wallet"></i>
                        <h3 id="totalEarnings">₹ 0.00</h3>
                        <p>Total Earnings</p>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-check-circle"></i>
                        <h3 id="completedTasks">0</h3>
                        <p>Tasks Completed</p>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-clock"></i>
                        <h3 id="pendingTasks">0</h3>
                        <p>Pending Tasks</p>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-users"></i>
                        <h3 id="totalReferrals">0</h3>
                        <p>Referrals</p>
                    </div>
                </div>
            </div>

            <div id="tasks" class="content-section">
                <h2>Available Tasks</h2>
                <p>Complete these tasks to start earning money:</p>
                <div class="task-list">
                    <div class="task-card">
                        <h3>Complete a Survey</h3>
                        <p>Share your opinion and earn ₹50</p>
                        <span class="task-reward">₹50</span>
                        <button class="task-btn">Start Task</button>
                    </div>
                    <div class="task-card">
                        <h3>Watch a Video</h3>
                        <p>Watch a 2-minute video and earn ₹25</p>
                        <span class="task-reward">₹25</span>
                        <button class="task-btn">Start Task</button>
                    </div>
                    <div class="task-card">
                        <h3>App Testing</h3>
                        <p>Test a new app and provide feedback for ₹100</p>
                        <span class="task-reward">₹100</span>
                        <button class="task-btn">Start Task</button>
                    </div>
                </div>
            </div>

            <div id="earnings" class="content-section">
                <h2>My Earnings</h2>
                <div class="earnings-summary">
                    <div class="earnings-stat">
                        <h3>Total Earned: <span id="earningsTotal">₹0.00</span></h3>
                        <p>Available for withdrawal: <span id="earningsAvailable">₹0.00</span></p>
                    </div>
                </div>
                <div class="transactions">
                    <h3>Transaction History</h3>
                    <p id="noTransactionsMessage">You haven't made any transactions yet.</p>
                    <table class="transactions-table" style="display: none;">
                        <tr>
                            <th>Date</th>
                            <th>Task</th>
                            <th>Amount</th>
                            <th>Status</th>
                        </tr>
                        <!-- Transactions will be added here dynamically -->
                    </table>
                </div>
            </div>

            <div id="referral" class="content-section">
                <h2>Refer & Earn</h2>
                <div class="referral-card">
                    <i class="fas fa-gift"></i>
                    <h3>Earn ₹100 for every friend who joins!</h3>
                    <p>Share your referral link with friends and earn rewards when they sign up and complete their first task.</p>
                    <div class="referral-link">
                        <input type="text" id="referralLinkInput" value="Generating your link..." readonly>
                        <button class="copy-btn" onclick="copyReferralLink()">Copy Link</button>
                    </div>
                    <div class="referral-stats">
                        <p>People referred: <strong id="referralCount">0</strong></p>
                        <p>Earned from referrals: <strong id="referralEarnings">₹0.00</strong></p>
                    </div>
                </div>
            </div>

            <div id="settings" class="content-section">
                <h2>Account Settings</h2>
                <div class="settings-form">
                    <div class="form-group">
                        <label>Email Address</label>
                        <input type="email" id="settingsEmail" readonly>
                    </div>
                    <div class="form-group">
                        <label>Notification Preferences</label>
                        <div class="checkbox-group">
                            <label>
                                <input type="checkbox" id="emailNotifications" checked> Email Notifications
                            </label>
                            <label>
                                <input type="checkbox" id="taskAlerts" checked> Task Alerts
                            </label>
                        </div>
                    </div>
                    <button class="save-btn">Save Changes</button>
                </div>
            </div>

            <div id="personal-info" class="content-section">
                <h2>Personal Information</h2>
                <div class="personal-info-form">
                    <div class="form-group">
                        <label>First Name</label>
                        <input type="text" id="infoFirstName" readonly>
                    </div>
                    <div class="form-group">
                        <label>Last Name</label>
                        <input type="text" id="infoLastName" readonly>
                    </div>
                    <div class="form-group">
                        <label>Email Address</label>
                        <input type="email" id="infoEmail" readonly>
                    </div>
                    <div class="form-group">
                        <label>Member Since</label>
                        <input type="text" id="memberSince" readonly>
                    </div>
                </div>
            </div>

            <div id="task-history" class="content-section">
                <h2>Task History</h2>
                <p id="noTasksMessage">You haven't completed any tasks yet.</p>
                <div class="task-history-table" style="display: none;">
                    <table>
                        <tr>
                            <th>Task</th>
                            <th>Date</th>
                            <th>Status</th>
                            <th>Earnings</th>
                        </tr>
                        <!-- Task history will be added here dynamically -->
                    </table>
                </div>
            </div>
        </main>
    </div>

    <script src="auth.js"></script>
    <script>
        // Check if user is logged in when page loads
        checkAuth();

        // Load user data into dashboard
        function loadUserData() {
            const userData = JSON.parse(localStorage.getItem('loggedInUser'));
            if (userData) {
                // Update all user information displays
                document.getElementById('userGreeting').textContent = 'Hi ' + userData.firstName + '!';
                document.getElementById('dropdownUserName').textContent = userData.firstName + ' ' + userData.lastName;
                document.getElementById('dropdownUserEmail').textContent = userData.email;
                document.getElementById('overviewUserName').textContent = userData.firstName;
                document.getElementById('infoFirstName').value = userData.firstName;
                document.getElementById('infoLastName').value = userData.lastName;
                document.getElementById('infoEmail').value = userData.email;
                document.getElementById('settingsEmail').value = userData.email;
                
                // Set join date to today for new users
                const joinDate = new Date().toLocaleDateString('en-IN', {
                    day: 'numeric',
                    month: 'long',
                    year: 'numeric'
                });
                document.getElementById('memberSince').value = joinDate;
                
                // Generate personalized referral link
                document.getElementById('referralLinkInput').value = 
                    'https://aroz.com/signup?ref=' + userData.firstName + userData.lastName.substring(0, 3);
            }
        }

        // Show/hide content sections
        function showSection(sectionId) {
            // Hide all sections
            document.querySelectorAll('.content-section').forEach(section => {
                section.classList.remove('active');
            });
            
            // Remove active class from all sidebar links
            document.querySelectorAll('.sidebar-link').forEach(link => {
                link.classList.remove('active');
            });
            
            // Show the selected section
            document.getElementById(sectionId).classList.add('active');
            
            // Add active class to corresponding sidebar link
            const correspondingLink = document.querySelector(`[onclick="showSection('${sectionId}')"]`);
            if (correspondingLink) {
                correspondingLink.classList.add('active');
            }
        }

        // Copy referral link function
        function copyReferralLink() {
            const linkInput = document.getElementById('referralLinkInput');
            linkInput.select();
            document.execCommand('copy');
            alert('Referral link copied to clipboard!');
        }

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadUserData();
            
            // Add click event to user dropdown
            document.getElementById('userMenuBtn').addEventListener('click', function(e) {
                e.stopPropagation();
                document.querySelector('.user-dropdown-content').classList.toggle('show');
            });

            // Close dropdown when clicking outside
            document.addEventListener('click', function(event) {
                if (!event.target.closest('.user-dropdown-container')) {
                    document.querySelector('.user-dropdown-content').classList.remove('show');
                }
            });
        });
    </script>
</body>
</html>



get-tasks.js




// netlify/functions/get-tasks.js
const { createClient } = require('@supabase/supabase-js');

exports.handler = async function(event, context) {
  // ... [keep the CORS and method check code] ...

  try {
    // ✅ USE ENVIRONMENT VARIABLES (NOT HARCODED KEYS)
    const supabaseUrl = process.env.SUPABASE_URL;
    const supabaseKey = process.env.SUPABASE_KEY;
    const supabase = createClient(supabaseUrl, supabaseKey);

    // ... [rest of your code] ...
  } catch (error) {
    // ... [error handling] ...
  }
};



user-data.js


// netlify/functions/user-data.js
const { createClient } = require('@supabase/supabase-js');

exports.handler = async function(event, context) {
  // Set CORS headers
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 200,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
        'Access-Control-Allow-Methods': 'GET, OPTIONS'
      },
      body: JSON.stringify({ message: 'CORS preflight successful' })
    };
  }

  if (event.httpMethod !== 'GET') {
    return { 
      statusCode: 405, 
      headers: { 'Access-Control-Allow-Origin': '*' },
      body: JSON.stringify({ error: 'Method Not Allowed' }) 
    };
  }

  try {
    // Get user ID from query string (e.g., /user-data?userId=123)
    const { userId } = event.queryStringParameters;
    if (!userId) {
      throw new Error('User ID is required');
    }

    const supabaseUrl = process.env.SUPABASE_URL;
    const supabaseKey = process.env.SUPABASE_KEY;
    const supabase = createClient(supabaseUrl, supabaseKey);

    // Fetch user data from database
    const { data: user, error } = await supabase
      .from('users')
      .select('id, email, first_name, last_name, created_at')
      .eq('id', userId)
      .single();

    if (error || !user) {
      throw new Error('User not found');
    }

    return {
      statusCode: 200,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(user)
    };

  } catch (error) {
    return {
      statusCode: 500,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ error: error.message })
    };
  }
};